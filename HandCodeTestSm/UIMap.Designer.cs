// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace HandCodeTestSm
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ForTest
        /// </summary>
        public void ForTest()
        {
            #region Variable Declarations
            WinMenuItem uICreatepokertablegrouMenuItem = this.UIServiceManager200newWindow.UIDocumentGroupTabList.UISEysgt1Group.UIItemPane.UIToolsMenuBar.UIActionsMenuItem.UIPokergamesMenuItem.UICreatepokertablegrouMenuItem;
            #endregion

            // Щелкните "Actions" -> "Poker games" -> "Create poker table group" элемент меню
            Mouse.Click(uICreatepokertablegrouMenuItem, new Point(51, 21));
        }
        
        #region Properties
        public UIServiceManager200newWindow UIServiceManager200newWindow
        {
            get
            {
                if ((this.mUIServiceManager200newWindow == null))
                {
                    this.mUIServiceManager200newWindow = new UIServiceManager200newWindow();
                }
                return this.mUIServiceManager200newWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIServiceManager200newWindow mUIServiceManager200newWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIServiceManager200newWindow : WinWindow
    {
        
        public UIServiceManager200newWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Service Manager20.0new 20.1.86.107687 (20.1)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UIDocumentGroupTabList UIDocumentGroupTabList
        {
            get
            {
                if ((this.mUIDocumentGroupTabList == null))
                {
                    this.mUIDocumentGroupTabList = new UIDocumentGroupTabList(this);
                }
                return this.mUIDocumentGroupTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentGroupTabList mUIDocumentGroupTabList;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDocumentGroupTabList : WpfTabList
    {
        
        public UIDocumentGroupTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "documentGroup";
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UISEysgt1Group UISEysgt1Group
        {
            get
            {
                if ((this.mUISEysgt1Group == null))
                {
                    this.mUISEysgt1Group = new UISEysgt1Group(this);
                }
                return this.mUISEysgt1Group;
            }
        }
        #endregion
        
        #region Fields
        private UISEysgt1Group mUISEysgt1Group;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UISEysgt1Group : WpfGroup
    {
        
        public UISEysgt1Group(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "SE: ysg.t1";
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPane mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemPane : WpfPane
    {
        
        public UIItemPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.WindowsFormsHost";
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UIToolsMenuBar UIToolsMenuBar
        {
            get
            {
                if ((this.mUIToolsMenuBar == null))
                {
                    this.mUIToolsMenuBar = new UIToolsMenuBar(this);
                }
                return this.mUIToolsMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIToolsMenuBar mUIToolsMenuBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIToolsMenuBar : WinMenuBar
    {
        
        public UIToolsMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Tools";
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UIActionsMenuItem UIActionsMenuItem
        {
            get
            {
                if ((this.mUIActionsMenuItem == null))
                {
                    this.mUIActionsMenuItem = new UIActionsMenuItem(this);
                }
                return this.mUIActionsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIActionsMenuItem mUIActionsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIActionsMenuItem : WinMenuItem
    {
        
        public UIActionsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Actions";
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public UIPokergamesMenuItem UIPokergamesMenuItem
        {
            get
            {
                if ((this.mUIPokergamesMenuItem == null))
                {
                    this.mUIPokergamesMenuItem = new UIPokergamesMenuItem(this);
                }
                return this.mUIPokergamesMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIPokergamesMenuItem mUIPokergamesMenuItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIPokergamesMenuItem : WinMenuItem
    {
        
        public UIPokergamesMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Poker games";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICreatepokertablegrouMenuItem
        {
            get
            {
                if ((this.mUICreatepokertablegrouMenuItem == null))
                {
                    this.mUICreatepokertablegrouMenuItem = new WinMenuItem(this);
                    #region Условия поиска
                    this.mUICreatepokertablegrouMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Create poker table group";
                    this.mUICreatepokertablegrouMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICreatepokertablegrouMenuItem.WindowTitles.Add("Service Manager20.0new 20.1.86.107687 (20.1)");
                    #endregion
                }
                return this.mUICreatepokertablegrouMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICreatepokertablegrouMenuItem;
        #endregion
    }
}
